

HI-TECH Software PIC LITE Macro Assembler V9.80 build 6738 
                                                                                               Wed Jun 26 23:13:48 2019

HI-TECH Software Omniscient Code Generator (Lite mode) build 6738
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 6738"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 3 "C:\Users\JOPHIN\Documents\pic\GAS sensor\IRANDGAS.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 3 "C:\Users\JOPHIN\Documents\pic\GAS sensor\IRANDGAS.c"
    45  2007  1932               	dw 0X1932 ;#
    46                           	FNROOT	_main
    47                           	global	_RA0
    48                           psect	maintext,global,class=CODE,delta=2
    49                           global __pmaintext
    50  07E5                     __pmaintext:
    51  0028                     _RA0	set	40
    52                           	global	_RA1
    53  0029                     _RA1	set	41
    54                           	global	_RA2
    55  002A                     _RA2	set	42
    56                           	global	_RA3
    57  002B                     _RA3	set	43
    58                           	global	_TRISA0
    59  0428                     _TRISA0	set	1064
    60                           	global	_TRISA1
    61  0429                     _TRISA1	set	1065
    62                           	global	_TRISA2
    63  042A                     _TRISA2	set	1066
    64                           	global	_TRISA3
    65  042B                     _TRISA3	set	1067
    66                           	file	"gas sensor.as"
    67                           	line	#
    68                           psect cinit,class=CODE,delta=2
    69                           global start_initialization
    70  07E1                     start_initialization:
    71                           
    72                           psect cinit,class=CODE,delta=2
    73                           global end_of_initialization
    74                           
    75                           ;End of C runtime variable initialization code
    76                           
    77  07E1                     end_of_initialization:
    78  07E1  0183               clrf status
    79  07E2  120A  118A  2FE5   ljmp _main	;jump to C main() function
    80                           psect	cstackCOMMON,class=COMMON,space=1
    81                           global __pcstackCOMMON
    82  0000                     __pcstackCOMMON:
    83                           	global	?_main
    84  0000                     ?_main:	; 0 bytes @ 0x0
    85                           	global	??_main
    86  0000                     ??_main:	; 0 bytes @ 0x0
    87 ;;Data sizes: Strings 0, constant 0, data 0, bss 0, persistent 0 stack 0
    88 ;;Auto spaces:   Size  Autos    Used
    89 ;; COMMON          14      0       0
    90 ;; BANK0           80      0       0
    91 ;; BANK1           80      0       0
    92 ;; BANK3           96      0       0
    93 ;; BANK2           96      0       0
    94                           
    95 ;;
    96 ;; Pointer list with targets:
    97                           
    98                           
    99                           
   100 ;;
   101 ;; Critical Paths under _main in COMMON
   102 ;;
   103 ;;   None.
   104 ;;
   105 ;; Critical Paths under _main in BANK0
   106 ;;
   107 ;;   None.
   108 ;;
   109 ;; Critical Paths under _main in BANK1
   110 ;;
   111 ;;   None.
   112 ;;
   113 ;; Critical Paths under _main in BANK3
   114 ;;
   115 ;;   None.
   116 ;;
   117 ;; Critical Paths under _main in BANK2
   118 ;;
   119 ;;   None.
   120                           
   121 ;;
   122 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   123 ;;
   124                           
   125 ;;
   126 ;;Call Graph Tables:
   127 ;;
   128 ;; ---------------------------------------------------------------------------------
   129 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   130 ;; ---------------------------------------------------------------------------------
   131 ;; (0) _main                                                 0     0      0       0
   132 ;; ---------------------------------------------------------------------------------
   133 ;; Estimated maximum stack depth 0
   134 ;; ---------------------------------------------------------------------------------
   135                           
   136 ;; Call Graph Graphs:
   137                           
   138 ;; _main (ROOT)
   139 ;;
   140                           
   141 ;; Address spaces:
   142                           
   143 ;;Name               Size   Autos  Total    Cost      Usage
   144 ;;BITCOMMON            E      0       0       0        0.0%
   145 ;;EEDATA             100      0       0       0        0.0%
   146 ;;NULL                 0      0       0       0        0.0%
   147 ;;CODE                 0      0       0       0        0.0%
   148 ;;COMMON               E      0       0       1        0.0%
   149 ;;BITSFR0              0      0       0       1        0.0%
   150 ;;SFR0                 0      0       0       1        0.0%
   151 ;;BITSFR1              0      0       0       2        0.0%
   152 ;;SFR1                 0      0       0       2        0.0%
   153 ;;STACK                0      0       0       2        0.0%
   154 ;;ABS                  0      0       0       3        0.0%
   155 ;;BITBANK0            50      0       0       4        0.0%
   156 ;;BITSFR3              0      0       0       4        0.0%
   157 ;;SFR3                 0      0       0       4        0.0%
   158 ;;BANK0               50      0       0       5        0.0%
   159 ;;BITSFR2              0      0       0       5        0.0%
   160 ;;SFR2                 0      0       0       5        0.0%
   161 ;;BITBANK1            50      0       0       6        0.0%
   162 ;;BANK1               50      0       0       7        0.0%
   163 ;;BITBANK3            60      0       0       8        0.0%
   164 ;;BANK3               60      0       0       9        0.0%
   165 ;;BITBANK2            60      0       0      10        0.0%
   166 ;;BANK2               60      0       0      11        0.0%
   167 ;;DATA                 0      0       0      12        0.0%
   168                           
   169                           	global	_main
   170                           psect	maintext
   171                           
   172 ;; *************** function _main *****************
   173 ;; Defined at:
   174 ;;		line 5 in file "C:\Users\JOPHIN\Documents\pic\GAS sensor\IRANDGAS.c"
   175 ;; Parameters:    Size  Location     Type
   176 ;;		None
   177 ;; Auto vars:     Size  Location     Type
   178 ;;		None
   179 ;; Return value:  Size  Location     Type
   180 ;;		None               void
   181 ;; Registers used:
   182 ;;		None
   183 ;; Tracked objects:
   184 ;;		On entry : 17F/0
   185 ;;		On exit  : 0/0
   186 ;;		Unchanged: 0/0
   187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   188 ;;      Params:         0       0       0       0       0
   189 ;;      Locals:         0       0       0       0       0
   190 ;;      Temps:          0       0       0       0       0
   191 ;;      Totals:         0       0       0       0       0
   192 ;;Total ram usage:        0 bytes
   193 ;; This function calls:
   194 ;;		Nothing
   195 ;; This function is called by:
   196 ;;		Startup code after reset
   197 ;; This function uses a non-reentrant model
   198 ;;
   199                           psect	maintext
   200                           	file	"C:\Users\JOPHIN\Documents\pic\GAS sensor\IRANDGAS.c"
   201                           	line	5
   202                           	global	__size_of_main
   203  001B                     	__size_of_main	equ	__end_of_main-_main
   204                           	
   205  07E5                     _main:	
   206                           	opt	stack 8
   207                           ; Regs used in _main: []
   208                           	line	6
   209                           	
   210  07E5                     l935:	
   211                           ;IRANDGAS.c: 6: TRISA0=0;
   212  07E5  1683               	bsf	status, 5	;RP0=1, select bank1
   213  07E6  1303               	bcf	status, 6	;RP1=0, select bank1
   214  07E7  1005               	bcf	(1064/8)^080h,(1064)&7
   215                           	line	7
   216                           ;IRANDGAS.c: 7: TRISA1=0;
   217  07E8  1085               	bcf	(1065/8)^080h,(1065)&7
   218                           	line	8
   219                           ;IRANDGAS.c: 8: TRISA2=1;
   220  07E9  1505               	bsf	(1066/8)^080h,(1066)&7
   221                           	line	9
   222                           ;IRANDGAS.c: 9: TRISA3=1;
   223  07EA  1585               	bsf	(1067/8)^080h,(1067)&7
   224                           	line	10
   225                           ;IRANDGAS.c: 10: while(1)
   226                           	
   227  07EB                     l559:	
   228                           	line	12
   229                           ;IRANDGAS.c: 11: {
   230                           ;IRANDGAS.c: 12: if (RA2==1)
   231  07EB  1283               	bcf	status, 5	;RP0=0, select bank0
   232  07EC  1D05               	btfss	(42/8),(42)&7
   233  07ED  2FEF               	goto	u11
   234  07EE  2FF0               	goto	u10
   235  07EF                     u11:
   236  07EF  2FF2               	goto	l560
   237  07F0                     u10:
   238                           	line	14
   239                           	
   240  07F0                     l937:	
   241                           ;IRANDGAS.c: 13: {
   242                           ;IRANDGAS.c: 14: RA0=1;
   243  07F0  1405               	bsf	(40/8),(40)&7
   244                           	line	15
   245                           ;IRANDGAS.c: 15: }
   246  07F1  2FF3               	goto	l561
   247                           	line	16
   248                           	
   249  07F2                     l560:	
   250                           	line	18
   251                           ;IRANDGAS.c: 16: else
   252                           ;IRANDGAS.c: 17: {
   253                           ;IRANDGAS.c: 18: RA0=0;
   254  07F2  1005               	bcf	(40/8),(40)&7
   255                           	line	19
   256                           	
   257  07F3                     l561:	
   258                           	line	20
   259                           ;IRANDGAS.c: 19: }
   260                           ;IRANDGAS.c: 20: if (RA3==1)
   261  07F3  1D85               	btfss	(43/8),(43)&7
   262  07F4  2FF6               	goto	u21
   263  07F5  2FF7               	goto	u20
   264  07F6                     u21:
   265  07F6  2FF9               	goto	l562
   266  07F7                     u20:
   267                           	line	22
   268                           	
   269  07F7                     l939:	
   270                           ;IRANDGAS.c: 21: {
   271                           ;IRANDGAS.c: 22: RA1=1;
   272  07F7  1485               	bsf	(41/8),(41)&7
   273                           	line	23
   274                           ;IRANDGAS.c: 23: }
   275  07F8  2FEB               	goto	l559
   276                           	line	24
   277                           	
   278  07F9                     l562:	
   279                           	line	26
   280                           ;IRANDGAS.c: 24: else
   281                           ;IRANDGAS.c: 25: {
   282                           ;IRANDGAS.c: 26: RA1=0;
   283  07F9  1085               	bcf	(41/8),(41)&7
   284  07FA  2FEB               	goto	l559
   285                           	line	27
   286                           	
   287  07FB                     l563:	
   288  07FB  2FEB               	goto	l559
   289                           	line	28
   290                           	
   291  07FC                     l564:	
   292                           	line	10
   293  07FC  2FEB               	goto	l559
   294                           	
   295  07FD                     l565:	
   296                           	line	29
   297                           	
   298  07FD                     l566:	
   299                           	global	start
   300  07FD  120A  118A  2800   	ljmp	start
   301                           	opt stack 0
   302                           GLOBAL	__end_of_main
   303  0800                     	__end_of_main:
   304 ;; =============== function _main ends ============
   305                           
   306                           	signat	_main,88
   307                           psect	maintext
   308                           	global	btemp
   309  007E                     	btemp set 07Eh
   310                           
   311                           	DABS	1,126,2	;btemp
   312                           	global	wtemp0
   313  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.80 build 6738 
Symbol Table                                                                                   Wed Jun 26 23:13:48 2019

                  u10 07F0                    u11 07EF                    u20 07F7                    u21 07F6  
                 l560 07F2                   l561 07F3                   l562 07F9                   l563 07FB  
                 l564 07FC                   l565 07FD                   l566 07FD                   l559 07EB  
                 l935 07E5                   l937 07F0                   l939 07F7                   _RA0 0028  
                 _RA1 0029                   _RA2 002A                   _RA3 002B                  _main 07E5  
                btemp 007E                  start 0000                 ?_main 0000                 status 0003  
               wtemp0 007E          __end_of_main 0800                ??_main 0000                _TRISA0 0428  
              _TRISA1 0429                _TRISA2 042A                _TRISA3 042B        __pcstackCOMMON 0000  
          __pmaintext 07E5  end_of_initialization 07E1   start_initialization 07E1         __size_of_main 001B  
